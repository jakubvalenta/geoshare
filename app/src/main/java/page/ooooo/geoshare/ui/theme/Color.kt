package page.ooooo.geoshare.ui.theme

import androidx.compose.foundation.isSystemInDarkTheme
import androidx.compose.material3.ColorScheme
import androidx.compose.runtime.Composable
import androidx.compose.ui.graphics.Color

val primaryLight = Color(0xFF006B59)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFF20F3CE)
val onPrimaryContainerLight = Color(0xFF004B3E)
val secondaryLight = Color(0xFF2B685A)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFB3F1DF)
val onSecondaryContainerLight = Color(0xFF0F5345)
val tertiaryLight = Color(0xFF495F86)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFFC6D8FF)
val onTertiaryContainerLight = Color(0xFF2B4167)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF410002)
val backgroundLight = Color(0xFFF2FBF7)
val onBackgroundLight = Color(0xFF151D1B)
val surfaceLight = Color(0xFFF2FBF7)
val onSurfaceLight = Color(0xFF151D1B)
val surfaceVariantLight = Color(0xFFD5E6DF)
val onSurfaceVariantLight = Color(0xFF3B4A45)
val outlineLight = Color(0xFF6A7B75)
val outlineVariantLight = Color(0xFFB9CAC4)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF2A322F)
val inverseOnSurfaceLight = Color(0xFFEAF3EE)
val inversePrimaryLight = Color(0xFF00DFBC)
val surfaceDimLight = Color(0xFFD3DCD8)
val surfaceBrightLight = Color(0xFFF2FBF7)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFEDF6F1)
val surfaceContainerLight = Color(0xFFE7F0EB)
val surfaceContainerHighLight = Color(0xFFE1EAE6)
val surfaceContainerHighestLight = Color(0xFFDBE5E0)

val primaryDark = Color(0xFFD8FFF2)
val onPrimaryDark = Color(0xFF00382D)
val primaryContainerDark = Color(0xFF00E6C2)
val onPrimaryContainerDark = Color(0xFF004237)
val secondaryDark = Color(0xFF95D3C1)
val onSecondaryDark = Color(0xFF00382D)
val secondaryContainerDark = Color(0xFF00483B)
val onSecondaryContainerDark = Color(0xFFA2E0CE)
val tertiaryDark = Color(0xFFF7F7FF)
val onTertiaryDark = Color(0xFF193054)
val tertiaryContainerDark = Color(0xFFB8CEFB)
val onTertiaryContainerDark = Color(0xFF253B60)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF0D1513)
val onBackgroundDark = Color(0xFFDBE5E0)
val surfaceDark = Color(0xFF0D1513)
val onSurfaceDark = Color(0xFFDBE5E0)
val surfaceVariantDark = Color(0xFF3B4A45)
val onSurfaceVariantDark = Color(0xFFB9CAC4)
val outlineDark = Color(0xFF84948E)
val outlineVariantDark = Color(0xFF3B4A45)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFDBE5E0)
val inverseOnSurfaceDark = Color(0xFF2A322F)
val inversePrimaryDark = Color(0xFF006B59)
val surfaceDimDark = Color(0xFF0D1513)
val surfaceBrightDark = Color(0xFF323B38)
val surfaceContainerLowestDark = Color(0xFF08100D)
val surfaceContainerLowDark = Color(0xFF151D1B)
val surfaceContainerDark = Color(0xFF19211F)
val surfaceContainerHighDark = Color(0xFF232C29)
val surfaceContainerHighestDark = Color(0xFF2E3734)

val ColorScheme.screenshotTextColor: Color
    @Composable
    get() = if (isSystemInDarkTheme()) Color(0xFFE2E2E2) else Color(0XFF1B1B1B)

val ColorScheme.screenshotMutedTextColor: Color
    @Composable
    get() = if (isSystemInDarkTheme()) Color(0xFFC6C6C6) else Color(0XFF474747)
